services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: mdpi_api:${MDPI_API_VERSION:-latest}
    restart: always
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      MDPI_API_HOST: ${MDPI_API_HOST}
      MDPI_API_DB__HOST: mdpi_api-db
    ports:
    - "8000:8000"
  db:
    image: postgres:13.8-bullseye
    hostname: mdpi_api-db
    ports:
    - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${MDPI_API_DB__PASSWORD}
      POSTGRES_USER: ${MDPI_API_DB__USER}
      POSTGRES_DB: mdpi_api_db
    volumes:
    - mdpi_api_db-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: pg_isready -h ${MDPI_API_DB__HOST} -d mdpi_api_db -U ${MDPI_API_DB__USER}
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: mdpi_api:${MDPI_API_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    env_file:
    - .env
    environment:
      MDPI_API_DB__HOST: mdpi_api-db
    depends_on:
      db:
        condition: service_healthy

volumes:
  mdpi_api_db-db-data:
    name: mdpi_api_db-db-data
