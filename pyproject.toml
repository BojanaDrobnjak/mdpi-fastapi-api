[tool.poetry]
name = "mdpi-api"
version = "0.1.0"
description = "A FastAPI backend API for processing and storing data using Polars and PostgreSQL."
authors = ["Bojana Drobnjak"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "0.109.1"
uvicorn = { version = "^0.22.0", extras = ["standard"] }
pydantic = "^2"
pydantic-settings = "^2"
yarl = "^1.9.2"
ujson = "^5.8.0"
SQLAlchemy = {version = "^2.0.18", extras = ["asyncio"]}
asyncpg = {version = "^0.28.0", extras = ["sa"]}
aiofiles = "^23.1.0"
httptools = "^0.6.0"
loguru = "^0.7.0"
python-decouple = "^3.8"
greenlet = "^1.1.2"

[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
flake8 = "~7.0.0"
mypy = "^1.10.1"
isort = "^5.11.4"
pre-commit = "^3.0.1"
wemake-python-styleguide = "^0.18.0"
black = "^22.12.0"
autoflake = "^1.6.1"
pytest-cov = "^4.0.0"
anyio = "^3.6.2"
pytest-env = "^0.8.1"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["api",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
plugins = ['pydantic.mypy']

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "MDPI_API_ENVIRONMENT=pytest",
    "MDPI_API_DB_BASE=testdb-sb",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "."
venv = "venv"
