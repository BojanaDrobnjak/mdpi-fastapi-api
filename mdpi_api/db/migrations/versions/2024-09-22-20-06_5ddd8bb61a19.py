"""add weather table

Revision ID: 5ddd8bb61a19
Revises: bc1c4474854e
Create Date: 2024-09-22 20:06:19.337521

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5ddd8bb61a19"
down_revision = "bc1c4474854e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "weather",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("city_id", sa.BigInteger(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_weather_city_id"), "weather", ["city_id"], unique=False)
    op.create_index(op.f("ix_weather_id"), "weather", ["id"], unique=False)
    op.drop_column("cities", "sunset")
    op.drop_column("cities", "sunrise")
    op.alter_column(
        "favorite_cities",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.UUID(),
        existing_nullable=False,
        postgresql_using="user_id::text::uuid",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "favorite_cities",
        "user_id",
        existing_type=sa.UUID(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        postgresql_using="user_id::text::bigint",
    )
    op.add_column(
        "cities",
        sa.Column(
            "sunrise",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "cities",
        sa.Column(
            "sunset",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_index(op.f("ix_weather_id"), table_name="weather")
    op.drop_index(op.f("ix_weather_city_id"), table_name="weather")
    op.drop_table("weather")
    # ### end Alembic commands ###
